#!/sbin/fish

function usage
    echo "ecfg [-hg] [list | CONFIG ]
    Opens the given program's config for editing.

Flags:
    -h Show this help message
    -g Open using gui emacs

Args:
    list   Show all possible configs
    CONFIG Config to edit
    "
    exit
end

argparse --name=ecfg 'h/help' 'g/gui' -- $argv

if test -z $argv[1]; or test $_flag_help
    usage
end

set df "$HOME/.files"
set m "$df/main"
set t "$df/template"
switch $argv[1]
    case tmux
        set F "$m/.tmux.conf"
    case kitty
        set F "$m/.config/kitty/kitty.conf"
    case alacritty
        set F "$t/.config/alacritty/alacritty.yml"
    case zathura
        set F "$m/.config/zathura/zathurarc"
    case env
        set F "$m/.env"
    case fish
        set F "$m/.config/fish/config.fish"
    case bash
        set F "$m/.bashrc"
    case alias
        set F "$m/.aliases"
    case completion
        set F "$m/.bash_completion"
    case zsh
        set F "$m/.zshrc"
    case i3
        set F "$m/.config/i3/config"
    case dunst
        set F "$t/.config/dunst/dunstrc"
    case emacs
        set F "$m/.emacs.d/init.el"
    case firefox
        set F "$m/.mozilla/firefox/*/chrome/userChrome.css"
    case polybar
        set F "$m/.config/polybar/config"
    case ssh
        set F "$m/.ssh/config"
    case git
        set F "$m/.gitconfig"
    case urxvt
        set F "$m/.Xresources.d/urxvt"
    case rofi
        set F "$t/.config/rofi/config.rasi"
    case list
        cat ~/bin/ecfg | \
        grep case | \
        tr -s ' ' | \
        cut -d' ' -f3 | \
        grep -v '\-h\|"'
        exit
    case "*"
        echo "No such config file '$argv[1]'"
        exit 1
end

if test $_flag_gui
    eval em -g $F
else
    eval em $F
end
