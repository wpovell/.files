#!/bin/bash

# Retheme / changes current theme

usage() {
    echo "$(tput bold)retheme$(tput sgr0)
    retheme [COMMAND]

    Custome themer script. No command refreshes i3 / bars

Commands:
    list    Lists possible themes
    "
    exit
}

contains() {
  local list="$1"
  local item="$2"
  if [[ $list =~ (^|[[:space:]])"$item"($|[[:space:]]) ]] ; then
    # yes, list include item
    result=0
  else
    result=1
  fi
  return $result
}


list=$(ls ~/dotfiles/ | grep .theme | awk '{ gsub(".theme", "",$1); print $1 }')

list() {
  echo $list
  exit
}

case $1 in
  -h|--help) usage ;;
  list) list ;;
esac

# If a theme is invalid and is not blank or the startup command
if (! `contains "$list" "$1"`) && [[ -n "$1" && "$1" != "startup" ]]; then
  echo -en "No such theme '$1'\n\nPossible themes include:\n    "
  list
fi

cd ~/dotfiles

# Only run if we're changing the theme
if [[ -n "$1" && "$1" != "startup" ]];
then
    CUR_THEME="$(head -n1 ~/.theme 2>/dev/null).theme"
    CUR_THEME="${CUR_THEME:1}"
    stow -D $CUR_THEME 2>/dev/null
    stow $1".theme"
fi

feh --bg-scale ~/.wallpaper
xrdb -merge -cpp /usr/bin/cpp -I$HOME ~/.Xresources

if [[ "$1" = "startup" ]]; then
    exit
fi

    polybar-msg cmd restart
i3-msg reload

# Interesting reason behind this
# We don't want to send color updates to terminals inside of tmux, just tmux itself
# This gets a list of all pts of these "bad" pseudo terminals
bad_pts=$(ps -ef | grep "\-bash" | grep -v "tty1\|grep" | perl -lne 'print $1 if /pts\/([0-9]+)/')
refresh "$bad_pts"

killall dunst
dunst &

{
# Not sure why this is needed, I guess bc polybar takes some time to restart
sleep 1
csvpn polybar
caffinate polybar
notif-snooze polybar
} &
