#!/bin/bash -e

usage() {
    prog=$(basename "$0")
    echo "$prog [COMMAND]
    Custome themer script. No command refreshes i3 / bars.

Commands:
    list    Lists possible themes
    "
    exit
}

contains() {
    local list="$1"
    local item="$2"
    if [[ $list =~ (^|[[:space:]])"$item"($|[[:space:]]) ]] ; then
        # list include item
        result=0
    else
        result=1
    fi
    return $result
}


list=$(find ~/.files/*.theme -prune -printf "%f\n" | \
           awk '{ gsub(".theme", "",$1); print $1 }')

list() {
    echo "$list"
    exit
}

case $1 in
    -h|--help) usage ;;
    list) list ;;
esac

# If a theme is invalid and is not blank or the startup command
if (! contains "$list" "$1") && [[ -n "$1" && "$1" != "startup" ]]; then
    echo -en "No such theme '$1'\n\nPossible themes include:\n    "
    list
fi

cd ~/.files || exit

# Only run if we're changing the theme
if [[ -n "$1" && "$1" != "startup" ]];
then
    CUR_THEME="$(head -n1 ~/.theme 2>/dev/null).theme"
    CUR_THEME="${CUR_THEME:2}"
    stow -D "$CUR_THEME" 2>/dev/null
    stow "$1"".theme"
fi

feh --bg-scale ~/.wallpaper
xrdb -merge -cpp /usr/bin/cpp -I"$HOME" ~/.Xresources

if [[ "$1" = "startup" ]]; then
    exit
fi

polybar-msg cmd restart 2>/dev/null
i3-msg reload 1>/dev/null

~/bin/support/refresh

ln -f ~/.files/gen/colors.css ~/.files/www/css/colors.css
ln -f ~/.files/gen/colors.css ~/.files/main/.mozilla/firefox/*/chrome/colors.css
ln -f ~/.files/gen/colors.conf ~/.config/kitty/colors.conf

killall dunst
dunst &

# Retheme spotify.
# Currently not happy enough with this to enable it.
#if [[ -n $1 ]]; then
#  ~/bin/support/theme-spotify >/dev/null &
#fi

{
    # Not sure why this is needed
    # I guess polybar takes some time to restart
    sleep 1

    csvpn polybar
    caffinate polybar
    notif-snooze polybar
} &
