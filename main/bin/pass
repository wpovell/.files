#!/bin/bash

DATABASE=~/files/pass.kdbx
TIMEOUT=15
CACHE=~/.cache/passwords.cache

usage() {
    echo "$(tput bold)pass$(tput sgr0)
    pass [rofi] ENTRY

    Wrapper around xkeepassxc-cli.

    Commands:
        rofi    Produces rofi prompt rather than cli
    "
    exit
}

copy_pass() {
    echo $password | keepassxc-cli clip $DATABASE "$1" $TIMEOUT >/dev/null &
}

ls_all() {
    local RES subgroups
    RES=$(echo $password | keepassxc-cli ls $DATABASE $1)
    subgroups=$(echo "$RES" | grep "/$" | grep -v "Recycle Bin")
    RES=$(echo "$RES" | grep -v "/$" | tail -n +2)

    if [[ -n $subgroups && -z $1 ]]; then
      while read i; do
        ls_all "$i"
      done <<< "$subgroups"
    fi

    echo "$RES"
}

# Suppress all stderr
exec 2<&-

if [[ -z $1 || "$1" = "-h" || "$1" = "--help" ]]; then
  usage
  exit
fi

if [[ "$1" = "rofi" ]]; then
  password=$(rofi -dmenu -password -p pass)
  # Exit on escape  
  if [[ $? -ne 0 ]]; then
    exit
  fi
else
  echo -n "Password: "
  read -s password
  echo
fi

RESULTS=$(echo $password | keepassxc-cli locate $DATABASE $1)
if [[ $? -ne 0 ]]; then
  echo "Bad password"
  if [[ "$1" = "rofi" ]]; then
    rofi -e "Bad password"
  fi
  exit
fi

if [[ "$1" == "rofi" ]]; then
  if [[ -f $CACHE ]]; then
    RESULTS=$(cat $CACHE | rofi -dmenu -i -p pass)
  else
    RESULTS=$(ls_all | rofi -dmenu -p -i pass)
  fi
  if [[ $? -ne 0 ]]; then
    exit
  fi
  
  RESULTS=$(echo $password | keepassxc-cli locate $DATABASE $RESULTS)  
fi

RESULTS=$(echo "$RESULTS" | tail -n +2 | grep -v "Recycle Bin\|No results for that search term")

N=$(echo "$RESULTS" | wc -l)

ls_all > $CACHE &

if [[ -z $RESULTS ]]; then
  echo "No password found"
  if [[ "$1" = "rofi" ]]; then
    rofi -e "No password found"
  fi
  exit
elif [[ $N -eq 1 ]]; then
  copy_pass "$RESULTS"
else
  echo "Multiple matches"

  if [[ "$1" = "rofi" ]]; then
    # TODO: Make this more robust
    RESULTS=$(echo "$RESULTS" | rofi -dmenu -p pass)
  else  
    c=0
    while read i; do
      ((c++))
      echo "$c) $i"
    done <<< "$RESULTS"
    echo -n "Choice: "
    read choice
    RESULTS=$(sed -n ${choice}p <<< "$RESULTS")
  fi

  copy_pass "$RESULTS"
fi

if [[ $? -eq 0 ]]; then
  echo "Copied password for \"$RESULTS\""
else
  echo "Faield to copy password for \"$RESULTS\""
fi
