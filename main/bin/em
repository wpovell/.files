#!/bin/bash -e

usage() {
    prog=$(basename "$0")
    echo "$prog [-nh] FILE...
    Wrapper around emacsclient

Flags:
    -g Open in GUI emacs
    -n Create new window for file
       This is ignored if -g not present
    -h Display this help message

Args:
    FILE... Files to open
    "
    exit
}

# Create new window?
new_win=false
# Open in gui emacs
gui=false

POS=()
while [[ $# -gt 0 ]]; do
    key="$1"

    case $key in
        -g)
            gui=true
            shift
            ;;
        -n)
            new_win=true
            shift
            ;;
        -h|--help)
            usage
            shift
            ;;
        *)
            POS+=("$1")
            shift
            ;;
    esac
done
set -- "${POS[@]}"

opts=()

# Pick client type
if [[ $gui = true ]]; then
    # -n = Don't wait to return
    opts+=(-n)
    opts+=(-s gui)
else
    opts+=(-t)
    opts+=(-s term)
fi

# nil if no open window
cmd="(member \"$DISPLAY\" (mapcar 'terminal-name (frames-on-display-list)))"
frame=$(emacsclient -s gui -e "$cmd" 2>/dev/null)

# New window
if [[ $new_win = true || $frame = nil || $gui = false ]]; then
    opts+=(-c)
fi

# Force focus if no file opened
if [[ -z $1 && $gui = true ]]; then
    opts+=(-e "(raise-frame)")
fi

if [[ $gui = true ]]; then
    exec emacsclient "${opts[@]}" "$@" 2>/dev/null >&2
else
    exec emacsclient "${opts[@]}" "$@"
fi
