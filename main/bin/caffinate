#!/bin/bash

# Script to prevent sleep/lock while fullscreen

usage() {
    echo "$(tput bold)caffinate$(tput sgr0)
    caffinate [COMMAND]

    Script used to prevent me having to unlock my screen while watching youtube vids.

    If no command is passed, will disable autolocker if currently in fullscreen.
    This is meant to be run by a systemd service (see caffinate.service).

Commands:
    toggle    Toggles locker. If disabled, will remain disabled regardless of
              fullscreen state.
    polybar   Sends appropriate ipc to polybar (used when polybar is restart)
    "
    exit
}

FN="/tmp/lock_disabled"

polybar() {
  if [[ -f $FN ]]; then
    polybar-msg hook lock 2 2>/dev/null
  fi
  exit
}

case $1 in
    -h|--help) usage ;;
    polybar) polybar ;;
esac

systemctl --user import-environment DISPLAY XAUTHORITY

if which dbus-update-activation-environment >/dev/null 2>&1; then
        dbus-update-activation-environment DISPLAY XAUTHORITY
fi

xprop_active_info () {
    xprop -id "$(xprop -root _NET_ACTIVE_WINDOW | awk '{print $5}')"
}

we_are_fullscreen () {
    xprop_active_info | grep _NET_WM_STATE_FULLSCREEN
}

disable_sleep () {
  echo "Disabling locker"
  polybar-msg hook lock 2 2>/dev/null
  xset -dpms
  xautolock -disable
}

enable_sleep () {
  if [[ ! -f $FN ]]; then
      echo "Enabling locker"
      polybar-msg hook lock 1 2>/dev/null
      xset +dpms
      xautolock -enable
  fi
}

if [[ "$1" = "toggle" ]]; then
    if [[ -f $FN ]]; then
        rm $FN
        enable_sleep
    else
        touch $FN
        disable_sleep
    fi
elif [[ -n $(we_are_fullscreen) ]]; then
    disable_sleep
else
    enable_sleep
fi
